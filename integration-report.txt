Integration Test Report - 2025-07-02T11:04:43.019Z


[2025-07-02T11:04:43.102Z] [POST] http://localhost:3000/api/v1/credentials/member
Request Headers: {
  Content-Type: application/json
}
Request Body: {
  "email": "integration1000@example.com",
  "password": "testpass"
}
Status: 201
Response Headers: {
  "content-length": "233",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"e9-/9fKw4TJ4jOrf/+RfLQ6kqJfMdM\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "id": 20,
    "email": "integration1000@example.com",
    "hashedPassword": "$2b$10$j4f1I7LFEGFGBUBJqKvy6uPBLD07Hch9YNnEMLwkTYAxDBHgFy0LS",
    "lastLoginAt": null,
    "createdAt": "2025-07-02T11:04:43.168Z",
    "updatedAt": "2025-07-02T11:04:43.168Z"
  }
}
Result: SUCCESS
Expectation: 201 (PASS)
================================================================================

[2025-07-02T11:04:43.194Z] [GET] http://localhost:3000/api/v1/credentials/member/20
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "233",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"e9-/9fKw4TJ4jOrf/+RfLQ6kqJfMdM\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "id": 20,
    "email": "integration1000@example.com",
    "hashedPassword": "$2b$10$j4f1I7LFEGFGBUBJqKvy6uPBLD07Hch9YNnEMLwkTYAxDBHgFy0LS",
    "lastLoginAt": null,
    "createdAt": "2025-07-02T11:04:43.168Z",
    "updatedAt": "2025-07-02T11:04:43.168Z"
  }
}
Result: SUCCESS
Expectation: 200 (PASS)
================================================================================

[2025-07-02T11:04:43.208Z] [PUT] http://localhost:3000/api/v1/credentials/member/20
Request Headers: {
  Content-Type: application/json
}
Request Body: {
  "email": "integration1000@example.com",
  "password": "testpass2"
}
Status: 200
Response Headers: {
  "content-length": "233",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"e9-EB/7J3EJIrHLM7rUgsqWwa0WrQ0\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "id": 20,
    "email": "integration1000@example.com",
    "hashedPassword": "$2b$10$Ao7nBi9SSL2tVys1KFyTxu/XPnneIrNbqlfY.wEjPKC0uhIlT8.Gq",
    "lastLoginAt": null,
    "createdAt": "2025-07-02T11:04:43.168Z",
    "updatedAt": "2025-07-02T11:04:43.274Z"
  }
}
Result: SUCCESS
Expectation: 200 (PASS)
================================================================================

[2025-07-02T11:04:43.299Z] [GET] http://localhost:3000/api/v1/credentials/member/20
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "233",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"e9-EB/7J3EJIrHLM7rUgsqWwa0WrQ0\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "id": 20,
    "email": "integration1000@example.com",
    "hashedPassword": "$2b$10$Ao7nBi9SSL2tVys1KFyTxu/XPnneIrNbqlfY.wEjPKC0uhIlT8.Gq",
    "lastLoginAt": null,
    "createdAt": "2025-07-02T11:04:43.168Z",
    "updatedAt": "2025-07-02T11:04:43.274Z"
  }
}
Result: SUCCESS
Expectation: 200 (PASS)
================================================================================

[2025-07-02T11:04:43.308Z] [DELETE] http://localhost:3000/api/v1/credentials/member/20
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "233",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"e9-EB/7J3EJIrHLM7rUgsqWwa0WrQ0\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "id": 20,
    "email": "integration1000@example.com",
    "hashedPassword": "$2b$10$Ao7nBi9SSL2tVys1KFyTxu/XPnneIrNbqlfY.wEjPKC0uhIlT8.Gq",
    "lastLoginAt": null,
    "createdAt": "2025-07-02T11:04:43.168Z",
    "updatedAt": "2025-07-02T11:04:43.274Z"
  }
}
Result: SUCCESS
Expectation: 200 (PASS)
================================================================================

[2025-07-02T11:04:43.329Z] [GET] http://localhost:3000/api/v1/credentials/member/20
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "13",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"d-XXcxLjB/sjfS0AB6+CxvXcLGrm4\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": null
}
Result: SUCCESS
Expectation: 200 (PASS)
================================================================================

[2025-07-02T11:04:43.337Z] [POST] http://localhost:3000/api/v1/credentials/instructor
Request Headers: {
  Content-Type: application/json
}
Request Body: {
  "username": "testuser1000",
  "password": "testpass"
}
Status: 500
Response Headers: {
  "content-length": "3307",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"ceb-8dwlMAhcihvmbmN6BzE+fvAWweI\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "message": "\nInvalid `prisma.instructorAccountCredentials.create()` invocation:\n\n{\n  data: {\n    username: \"testuser1000\",\n    hashedPassword: \"$2b$10$XJUoB4RwTtZe6lo32q15OOwscv7BD7hHdnZdyzKHATAoJqyyKyIja\",\n    instructor: {\n      connect: {\n        id: undefined,\n?       email?: String,\n?       AND?: InstructorWhereInput | InstructorWhereInput[],\n?       OR?: InstructorWhereInput[],\n?       NOT?: InstructorWhereInput | InstructorWhereInput[],\n?       firstName?: StringFilter | String,\n?       middleName?: StringNullableFilter | String | Null,\n?       lastName?: StringFilter | String,\n?       gender?: StringFilter | String,\n?       dateOfBirth?: DateTimeFilter | DateTime,\n?       number?: StringFilter | String,\n?       isActive?: BoolFilter | Boolean,\n?       createdAt?: DateTimeFilter | DateTime,\n?       updatedAt?: DateTimeFilter | DateTime,\n?       credentials?: InstructorAccountCredentialsNullableScalarRelationFilter | InstructorAccountCredentialsWhereInput | Null,\n?       personalizedPrograms?: PersonalizedProgramListRelationFilter,\n?       standardPrograms?: StandardProgramListRelationFilter\n      }\n    }\n  }\n}\n\nArgument `connect` of type InstructorWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.instructorAccountCredentials.create()` invocation:\n\n{\n  data: {\n    username: \"testuser1000\",\n    hashedPassword: \"$2b$10$XJUoB4RwTtZe6lo32q15OOwscv7BD7hHdnZdyzKHATAoJqyyKyIja\",\n    instructor: {\n      connect: {\n        id: undefined,\n?       email?: String,\n?       AND?: InstructorWhereInput | InstructorWhereInput[],\n?       OR?: InstructorWhereInput[],\n?       NOT?: InstructorWhereInput | InstructorWhereInput[],\n?       firstName?: StringFilter | String,\n?       middleName?: StringNullableFilter | String | Null,\n?       lastName?: StringFilter | String,\n?       gender?: StringFilter | String,\n?       dateOfBirth?: DateTimeFilter | DateTime,\n?       number?: StringFilter | String,\n?       isActive?: BoolFilter | Boolean,\n?       createdAt?: DateTimeFilter | DateTime,\n?       updatedAt?: DateTimeFilter | DateTime,\n?       credentials?: InstructorAccountCredentialsNullableScalarRelationFilter | InstructorAccountCredentialsWhereInput | Null,\n?       personalizedPrograms?: PersonalizedProgramListRelationFilter,\n?       standardPrograms?: StandardProgramListRelationFilter\n      }\n    }\n  }\n}\n\nArgument `connect` of type InstructorWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.\n    at new PrismaClientValidationError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:21:2580)\n    at Pn (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1367)\n    at handleRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7090)\n    at handleAndLogRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6771)\n    at <anonymous> (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6478)\n    at processTicksAndRejections (native:7:39)"
}
Result: FAIL
Expectation: 201 (FAIL)
================================================================================

[2025-07-02T11:04:43.416Z] [GET] http://localhost:3000/api/v1/credentials/instructor/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.417Z] [PUT] http://localhost:3000/api/v1/credentials/instructor/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.418Z] [GET] http://localhost:3000/api/v1/credentials/instructor/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.418Z] [DELETE] http://localhost:3000/api/v1/credentials/instructor/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.419Z] [GET] http://localhost:3000/api/v1/credentials/instructor/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.419Z] [POST] http://localhost:3000/api/v1/credentials/admin
Request Headers: {
  Content-Type: application/json
}
Request Body: {
  "username": "testadmin1000",
  "password": "testpass"
}
Status: 500
Response Headers: {
  "content-length": "2755",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"ac3-6tZv58Sd2KDZxiCJyJjzksD6wts\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "message": "\nInvalid `prisma.adminAccountCredentials.create()` invocation:\n\n{\n  data: {\n    username: \"testadmin1000\",\n    hashedPassword: \"$2b$10$MK4quugIacZhEkUPRL6mHeCPfdnJvOC/Uk7UAISwWePHdWLtqp79.\",\n    admin: {\n      connect: {\n        id: undefined,\n?       email?: String,\n?       AND?: AdminWhereInput | AdminWhereInput[],\n?       OR?: AdminWhereInput[],\n?       NOT?: AdminWhereInput | AdminWhereInput[],\n?       firstName?: StringFilter | String,\n?       middleName?: StringNullableFilter | String | Null,\n?       lastName?: StringFilter | String,\n?       role?: StringFilter | String,\n?       isActive?: BoolFilter | Boolean,\n?       createdAt?: DateTimeFilter | DateTime,\n?       updatedAt?: DateTimeFilter | DateTime,\n?       credentials?: AdminAccountCredentialsNullableScalarRelationFilter | AdminAccountCredentialsWhereInput | Null\n      }\n    }\n  }\n}\n\nArgument `connect` of type AdminWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.adminAccountCredentials.create()` invocation:\n\n{\n  data: {\n    username: \"testadmin1000\",\n    hashedPassword: \"$2b$10$MK4quugIacZhEkUPRL6mHeCPfdnJvOC/Uk7UAISwWePHdWLtqp79.\",\n    admin: {\n      connect: {\n        id: undefined,\n?       email?: String,\n?       AND?: AdminWhereInput | AdminWhereInput[],\n?       OR?: AdminWhereInput[],\n?       NOT?: AdminWhereInput | AdminWhereInput[],\n?       firstName?: StringFilter | String,\n?       middleName?: StringNullableFilter | String | Null,\n?       lastName?: StringFilter | String,\n?       role?: StringFilter | String,\n?       isActive?: BoolFilter | Boolean,\n?       createdAt?: DateTimeFilter | DateTime,\n?       updatedAt?: DateTimeFilter | DateTime,\n?       credentials?: AdminAccountCredentialsNullableScalarRelationFilter | AdminAccountCredentialsWhereInput | Null\n      }\n    }\n  }\n}\n\nArgument `connect` of type AdminWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.\n    at new PrismaClientValidationError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:21:2580)\n    at Pn (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1367)\n    at handleRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7090)\n    at handleAndLogRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6771)\n    at <anonymous> (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6478)\n    at processTicksAndRejections (native:7:39)"
}
Result: FAIL
Expectation: 201 (FAIL)
================================================================================

[2025-07-02T11:04:43.483Z] [GET] http://localhost:3000/api/v1/credentials/admin/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.484Z] [PUT] http://localhost:3000/api/v1/credentials/admin/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.485Z] [GET] http://localhost:3000/api/v1/credentials/admin/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.485Z] [DELETE] http://localhost:3000/api/v1/credentials/admin/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.486Z] [GET] http://localhost:3000/api/v1/credentials/admin/undefined
SKIPPED: Dependent ID was not set due to previous failure.
================================================================================

[2025-07-02T11:04:43.487Z] [GET] http://localhost:3000/api/v1/credentials/member/email-available?email=integration1000@example.com
Request Headers: {
  Content-Type: application/json
}
Status: 500
Response Headers: {
  "content-length": "981",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"3d5-ynOWOrgXpcb+LMJaeF4iCG+By5Q\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "message": "\nInvalid `prisma.memberAccountCredentials.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.memberAccountCredentials.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.\n    at new PrismaClientValidationError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:21:2580)\n    at Pn (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1367)\n    at handleRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7090)\n    at handleAndLogRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6771)\n    at <anonymous> (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6478)\n    at processTicksAndRejections (native:7:39)"
}
Result: FAIL
================================================================================

[2025-07-02T11:04:43.495Z] [GET] http://localhost:3000/api/v1/credentials/instructor/username-available?username=testuser1000
Request Headers: {
  Content-Type: application/json
}
Status: 500
Response Headers: {
  "content-length": "989",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"3dd-9RrOXNl6vLhU54oxNrHmcSk+Jhw\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "message": "\nInvalid `prisma.instructorAccountCredentials.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.instructorAccountCredentials.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.\n    at new PrismaClientValidationError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:21:2580)\n    at Pn (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1367)\n    at handleRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7090)\n    at handleAndLogRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6771)\n    at <anonymous> (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6478)\n    at processTicksAndRejections (native:7:39)"
}
Result: FAIL
================================================================================

[2025-07-02T11:04:43.503Z] [GET] http://localhost:3000/api/v1/credentials/admin/username-available?username=testadmin1000
Request Headers: {
  Content-Type: application/json
}
Status: 500
Response Headers: {
  "content-length": "979",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"3d3-gq1AtH83I/cyMzH3FkJH0ogPPaw\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "message": "\nInvalid `prisma.adminAccountCredentials.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.",
  "stack": "PrismaClientValidationError: \nInvalid `prisma.adminAccountCredentials.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.\n    at new PrismaClientValidationError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:21:2580)\n    at Pn (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1367)\n    at handleRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7090)\n    at handleAndLogRequestError (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6771)\n    at <anonymous> (D:\\dev\\personal-trainer-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6478)\n    at processTicksAndRejections (native:7:39)"
}
Result: FAIL
================================================================================

[2025-07-02T11:04:43.511Z] [GET] http://localhost:3000/api/v1/credentials/username-available?username=testuser1000
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "27",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"1b-0d79I2YxB9ZRuC3c4X6jYxYknJk\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "available": true
  }
}
Result: SUCCESS
================================================================================

[2025-07-02T11:04:43.551Z] [GET] http://localhost:3000/api/v1/credentials/find-by-username?username=testuser1000
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "41",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"29-Dcn0u+ESLassA1QRXufOgpTWvxo\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "type": null,
    "credentials": null
  }
}
Result: SUCCESS
================================================================================

[2025-07-02T11:04:43.569Z] [GET] http://localhost:3000/api/v1/credentials/stats
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "83",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"53-LrNBln+KvtbZWv+Oj3ZPCmC8BuI\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": {
    "totalCredentials": 23,
    "byType": {
      "members": 15,
      "instructors": 5,
      "admins": 3
    }
  }
}
Result: SUCCESS
================================================================================

[2025-07-02T11:04:43.598Z] [GET] http://localhost:3000/api/v1/credentials/recent-logins
Request Headers: {
  Content-Type: application/json
}
Status: 200
Response Headers: {
  "content-length": "11",
  "content-security-policy": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests",
  "content-type": "application/json; charset=utf-8",
  "cross-origin-opener-policy": "same-origin",
  "cross-origin-resource-policy": "same-origin",
  "date": "Wed, 02 Jul 2025 11:04:43 GMT",
  "etag": "W/\"b-EFAlOux7Kcr/ZEgGkn2r+oFAbu4\"",
  "origin-agent-cluster": "?1",
  "referrer-policy": "no-referrer",
  "x-content-type-options": "nosniff",
  "x-dns-prefetch-control": "off",
  "x-download-options": "noopen",
  "x-frame-options": "SAMEORIGIN",
  "x-permitted-cross-domain-policies": "none",
  "x-xss-protection": "0"
}
Response Body:
{
  "data": []
}
Result: SUCCESS
================================================================================

Integration test run complete.
Success: 10
Fail/Error: 15
Total: 25

